"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[3976],{2053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"intro","title":"Bluehawk","description":"Bluehawk 1.0.0 has been released! Future releases will adhere to semantic versioning.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/","permalink":"/Bluehawk/","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-university/Bluehawk/blob/main/docs/docs/intro.md","tags":[],"version":"current","sidebarPosition":-1,"frontMatter":{"id":"intro","title":"Bluehawk","sidebar_label":"Introduction","sidebar_position":-1,"slug":"/"},"sidebar":"mainSidebar","next":{"title":"Install","permalink":"/Bluehawk/install"}}');var i=n(4848),a=n(8453);const r={id:"intro",title:"Bluehawk",sidebar_label:"Introduction",sidebar_position:-1,slug:"/"},l=void 0,s={},d=[{value:"Install",id:"install",level:2},{value:"Example",id:"example",level:2},{value:"How to Use Bluehawk",id:"how-to-use-bluehawk",level:2},{value:"Videos",id:"videos",level:3},{value:"Extract and Generate Code Examples",id:"extract-and-generate-code-examples",level:4},{value:"Generate Code for Tutorial Apps",id:"generate-code-for-tutorial-apps",level:4},{value:"Contributing",id:"contributing",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.admonition,{title:"Bluehawk 1.0.0 is here \ud83c\udf89",type:"note",children:(0,i.jsxs)(t.p,{children:["Bluehawk 1.0.0 has been released! Future releases will adhere to ",(0,i.jsx)(t.a,{href:"https://semver.org/",children:"semantic versioning"}),"."]})}),"\n",(0,i.jsx)(t.p,{children:"Bluehawk is a markup processor for extracting and manipulating arbitrary code.\nWith Bluehawk, you can:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Extract code examples for use in documentation"}),"\n",(0,i.jsx)(t.li,{children:"Generate formatted code examples for use in documentation"}),"\n",(0,i.jsx)(t.li,{children:'Replace "finished" code with "todo" code for a branch in a tutorial repo'}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,i.jsxs)(t.p,{children:["Install Bluehawk with ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/",children:"NPM"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"npm install -g bluehawk\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.p,{children:"Say you're documenting a library. To provide code examples for library functionality,\nyou're forced to copy & paste snippets of code from test cases you've written into\nyour documentation. Every time an API changes, or you want to improve an example, or\nyou want to fix a bug, you have to copy & paste those snippets again. Sooner or later\nyou'll miss a line, or forget to copy and paste a change from your tests to the\ndocumentation, or forget to update a line highlight... because you're trying to\nmaintain equivalent code snippets in two places at once."}),"\n",(0,i.jsx)(t.p,{children:"What if there was a better way? What if you could write your examples in one place,\nand let a tool take care of removing your assertions and setup and copying the\nexamples into your documentation? Bluehawk does exactly that."}),"\n",(0,i.jsx)(t.h2,{id:"how-to-use-bluehawk",children:"How to Use Bluehawk"}),"\n",(0,i.jsx)(t.p,{children:"To use Bluehawk:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["You add special comments, called ",(0,i.jsx)(t.a,{href:"reference/tags",children:"tags"}),", to code blocks or lines of source code."]}),"\n",(0,i.jsxs)(t.li,{children:["Use the ",(0,i.jsx)(t.a,{href:"reference/cli",children:"Bluehawk CLI"})," to read the input files and generate output files based on the tags."]}),"\n",(0,i.jsx)(t.li,{children:"Include the output files that the Bluehawk CLI generated in your documentation."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"For examples of how the Realm Docs team uses Bluehawk in workflows, see our guides:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"code-snippets/",children:"Extract Code Snippets"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"tutorials",children:"Create Checkpointed Tutorials"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"continuous-integration",children:"Bluehawk in Continuous Integration"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"videos",children:"Videos"}),"\n",(0,i.jsx)(t.p,{children:"How do you use Bluehawk in workflows? Here are a couple of short video\noverviews of how the MongoDB Developer Education team uses Bluehawk to create\ncode examples:"}),"\n",(0,i.jsx)(t.h4,{id:"extract-and-generate-code-examples",children:"Extract and Generate Code Examples"}),"\n",(0,i.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/4G2n3Ps7qUY",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),"\n",(0,i.jsx)(t.h4,{id:"generate-code-for-tutorial-apps",children:"Generate Code for Tutorial Apps"}),"\n",(0,i.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/DyF4tOxS0zU",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),"\n",(0,i.jsx)(t.h2,{id:"contributing",children:"Contributing"}),"\n",(0,i.jsxs)(t.p,{children:["For more information about how to run, build, or test Bluehawk yourself, see ",(0,i.jsx)(t.a,{href:"https://github.com/mongodb-university/Bluehawk/blob/main/CONTRIBUTING.md",children:"CONTRIBUTING.md"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(6540);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);